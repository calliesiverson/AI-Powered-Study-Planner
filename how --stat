[33mcommit 3a58f5e785ff38bfb97273cc89544ead321ab303[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Callie Siverson <callie.siverson@go.mnstate.edu>
Date:   Thu Mar 6 12:09:07 2025 -0600

    Initial project setup

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..5f56a00[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mvenv/[m
[32m+[m[32m__pycache__/[m
[32m+[m[32mdb.sqlite3[m
[32m+[m[32m*.pyc[m
[32m+[m[32m*.log[m
\ No newline at end of file[m
[1mdiff --git a/manage.py b/manage.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7fb6855[m
[1m--- /dev/null[m
[1m+++ b/manage.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m#!/usr/bin/env python[m
[32m+[m[32m"""Django's command-line utility for administrative tasks."""[m
[32m+[m[32mimport os[m
[32m+[m[32mimport sys[m
[32m+[m
[32m+[m
[32m+[m[32mdef main():[m
[32m+[m[32m    """Run administrative tasks."""[m
[32m+[m[32m    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')[m
[32m+[m[32m    try:[m
[32m+[m[32m        from django.core.management import execute_from_command_line[m
[32m+[m[32m    except ImportError as exc:[m
[32m+[m[32m        raise ImportError([m
[32m+[m[32m            "Couldn't import Django. Are you sure it's installed and "[m
[32m+[m[32m            "available on your PYTHONPATH environment variable? Did you "[m
[32m+[m[32m            "forget to activate a virtual environment?"[m
[32m+[m[32m        ) from exc[m
[32m+[m[32m    execute_from_command_line(sys.argv)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    main()[m
[1mdiff --git a/my_app/__init__.py b/my_app/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/my_app/admin.py b/my_app/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8c38f3f[m
[1m--- /dev/null[m
[1m+++ b/my_app/admin.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m
[32m+[m[32m# Register your models here.[m
[1mdiff --git a/my_app/apps.py b/my_app/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e360eca[m
[1m--- /dev/null[m
[1m+++ b/my_app/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass MyAppConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'my_app'[m
[1mdiff --git a/my_app/migrations/0001_initial.py b/my_app/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..14fbcac[m
[1m--- /dev/null[m
[1m+++ b/my_app/migrations/0001_initial.py[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m# Generated by Django 5.1.6 on 2025-03-06 04:09[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Reward',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('points', models.IntegerField(default=0)),[m
[32m+[m[32m                ('badge', models.CharField(blank=True, max_length=100, null=True)),[m
[32m+[m[32m                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='StudyTask',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('title', models.CharField(max_length=255)),[m
[32m+[m[32m                ('description', models.TextField(blank=True, null=True)),[m
[32m+[m[32m                ('due_date', models.DateField(blank=True, null=True)),[m
[32m+[m[32m                ('completed', models.BooleanField(default=False)),[m
[32m+[m[32m                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/my_app/migrations/__init__.py b/my_app/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/my_app/models.py b/my_app/models.py[m
[1mnew file mode 100644[m
[1mindex 0000000..685957c[m
[1m--- /dev/null[m
[1m+++ b/my_app/models.py[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mfrom django.db import models[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m
[32m+[m[32mclass StudyTask(models.Model):[m
[32m+[m[32m    user = models.ForeignKey(User, on_delete=models.CASCADE)[m
[32m+[m[32m    title = models.CharField(max_length=255)[m
[32m+[m[32m    description = models.TextField(blank=True, null=True)[m
[32m+[m[32m    due_date = models.DateField(null=True, blank=True)[m
[32m+[m[32m    completed = models.BooleanField(default=False)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.title[m
[32m+[m
[32m+[m[32mclass Reward(models.Model):[m
[32m+[m[32m    user = models.ForeignKey(User, on_delete=models.CASCADE)[m
[32m+[m[32m    points = models.IntegerField(default=0)[m
[32m+[m[32m    badge = models.CharField(max_length=100, blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return f"{self.user.username} - {self.points} points"[m
[1mdiff --git a/my_app/templates/dashboard.html b/my_app/templates/dashboard.html[m
[1mnew file mode 100644[m
[1mindex 0000000..b6ceae7[m
[1m--- /dev/null[m
[1m+++ b/my_app/templates/dashboard.html[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mÔªø<h2>Welcome, {{ request.user.username }}!</h2>[m
[32m+[m[32m<h3>Your Study Tasks</h3>[m
[32m+[m[32m<ul>[m
[32m+[m[32m    {% for task in tasks %}[m
[32m+[m[32m        <li>{{ task.title }} - {% if task.completed %}‚úÖ{% else %}‚ùå{% endif %}</li>[m
[32m+[m[32m    {% endfor %}[m
[32m+[m[32m</ul>[m
[1mdiff --git a/my_app/tests.py b/my_app/tests.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7ce503c[m
[1m--- /dev/null[m
[1m+++ b/my_app/tests.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m
[32m+[m[32m# Create your tests here.[m
[1mdiff --git a/my_app/views.py b/my_app/views.py[m
[1mnew file mode 100644[m
[1mindex 0000000..1f11872[m
[1m--- /dev/null[m
[1m+++ b/my_app/views.py[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m[32m#Sfrom .models import StudyTask[m
[32m+[m
[32m+[m[32m# def dashboard(request):[m
[32m+[m[32m#     return render(request, 'dashboard.html')[m
[1mdiff --git a/my_project/__init__.py b/my_project/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/my_project/asgi.py b/my_project/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..362ecf5[m
[1m--- /dev/null[m
[1m+++ b/my_project/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for my_project project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.1/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/my_project/settings.py b/my_project/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..de0e2aa[m
[1m--- /dev/null[m
[1m+++ b/my_project/settings.py[m
[36m@@ -0,0 +1,128 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for my_project project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 5.1.6.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.1/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.1/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve().parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'django-insecure-s$hw7t89qm20%-hxmkoyf#2wcxzo%1w^^j6-%43gw$g4b&cdni'[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'my_app'[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'my_project.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m[32m        'DIRS': [BASE_DIR / "templates"],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.debug',[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'my_project.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.1/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.postgresql',[m
[32m+[m[32m        'NAME': 'study_planner_db',[m
[32m+[m[32m        'USER': 'postgres',[m
[32m+[m[32m        'PASSWORD': 'Sweetie@06201962&',[m
[32m+[m[32m        'HOST': 'localhost',[m
[32m+[m[32m        'PORT': '5432',[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.1/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.1/howto/static-files/[m
[32m+[m
[32m+[m[32mSTATIC_URL = 'static/'[m
[32m+[m
[32m+[m[32m# Default primary key field type[m
[32m+[m[32m# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field[m
[32m+[m
[32m+[m[32mDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'[m
[1mdiff --git a/my_project/urls.py b/my_project/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..ddc32b4[m
[1m--- /dev/null[m
[1m+++ b/my_project/urls.py[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m"""[m
[32m+[m[32mURL configuration for my_project project.[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/5.1/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m[32m# from my_app import dashboard[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    # path('admin/', admin.site.urls),[m
[32m+[m[32m    # path('dashboard/', views.dashboard, name='dashboard'),[m
[32m+[m[32m][m
[1mdiff --git a/my_project/wsgi.py b/my_project/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2089511[m
[1m--- /dev/null[m
[1m+++ b/my_project/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for my_project project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_project.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
